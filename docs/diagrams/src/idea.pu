@startmindmap filecastalogue diagram
!theme materia

* cli
** fcastadm
*** list
**** files
*****_ if version_id: only show for that version
*****_ if nothing: show all?
*****_ (optional) version_id
*****_ (optional) --opts
******_ Opts
*** report
*** apply
*** flags
**** (optional) --repo (-r)
*****_ location (e.g. a filesystem path)
**** (optional) --help
***** repo
***** add
****** ordinary
** fcastdev
*** repo
**** tar?
*****_ tar_archive_target_path
**** delete 
**** new
*** add
**** ordinary
*****_ version_id
*****_ tracked_path
*****_ (optional) Attributes
***** (optional) --blob
******_ location (e.g. a filesystem path)
**** dir
*****_ version_id
*****_ tracked_path
*****_ (optional) Attributes
**** symlink
*****_ version_id
*****_ tracked_path
*****_ (optional) Attributes
**** nonExisting
*****_ version_id
*****_ tracked_path
*****_ (optional) Attributes
**** scan?
*****_ directory_path
*** list
**** files
*****_ if version_id: only show for that version
*****_ if nothing: show all?
*****_ (optional) version_id
*****_ (optional) --opts
******_ Opts
*** report
*** version
**** remove
*****_ version_id
**** add
*****_ version_id
**** list
**** insert
*****_ before?
*****_ after
*****_ version_id
****** maybe
*******_ position (according to list) ?
*******_ other_version_id
*** flags
**** (optional) --repo (-r)
*****_ location (e.g. a filesystem path)
**** (optional) --config (-c)
*****_ location (e.g. a filesystem path)
**** (optional) --help
***** repo
***** add
****** ordinary
@endmindmap

@startmindmap cli_mindmap
!theme materia

* cli
** dev
*** new
**** (optional)path
**** recursive?
*** add
**** version
**** file(ordinary)
**** dir
*** list
**** files
**** versions
*** status/report
****_ diff file version
*** remove/delete
**** file
**** version
**** repository
*** commit/apply
****_ apply version changes
*** version
**** like git checkout?
** admin
*** use configfiles???

@endmindmap

@startuml cli_workflow
!theme materia

title Workflow Cli

participant Terminal as term
participant Cli as cli
participant Filecastalogue as fcl
database "Persistent Data" as data

term --> cli: commands
cli --> term: status information
cli --> term: errors

term -> cli: config????

term -> cli: help

term -> cli: init /path
cli -> fcl: new repo
fcl -> data: create repo in /path

term -> cli: add /path/to/file ?path/to/repo?
cli -> term: /path/to/file added to repo

term -> cli: list files
cli -> term: show list of tracked files

term -> cli: list file verions

term -> cli: list repos?

term -> cli: delete path/to/repo

term -> cli: remove /path/to/file ?-version version_id?
cli -> term: /path/to/file removed from /path/to/repo

term -> cli: ?commit changes to file? + ?add version?

term -> cli: ?new version of file?

cli --> fcl: stuff

fcl --> data: stuff


@enduml

@startmindmap aziro diagram
!theme materia

* cli
** dev/admin
*** repo
**** tar?
**** delete 
***** path
**** new
**** future proof fantasy url
*** add
**** ordinary
*****_ version_id
*****_ tracked_path
***** maybe
******_ nothing
******_ path/URL (URL as a future proofing fantasy)
******_ attributes
**** dir
*****_ version_id
*****_ tracked_path
***** maybe
******_ nothing
******_ attributes
**** symlink
*****_ version_id
*****_ tracked_path
***** maybe
******_ nothing
******_ target_path
******_ attributes
**** nonExisting
*****_ version_id
*****_ tracked_path
***** maybe
******_ nothing
******_ attributes
**** scan?
*** list
**** files
*****_ if version_id: only show for that version
*****_ if nothing: show all?
***** maybe
******_ nothing
******_ version_id
******_ OPTS
*******_ ................
*******_ ................
*******_ ................
*******_ version_id
*** report___?
*** version
**** remove
*****_ version_id
**** add
*****_ version_id
**** list
**** insert
*****_ before?
*****_ after
*****_ version_id
****** maybe
*******_ position (according to list) ?
*******_ other_version_id
*** apply .... ?

@endmindmap



@startuml cli
!theme spacelab

package Dev{

} 

package Admin{

} 


@enduml



# Filecastalogue

## Use Cases
```plantuml
@startuml filecastalogue
!theme materia
left to right direction

package Administration {
    actor "System Admin" as a
}


package Development {
    actor "Developer" as d
    actor "Packager" as p
    usecase "Make Configuration files" as mcf
    p -> mcf
    d -> mcf
}

package "Application and Configs" {
    usecase "Store Configuration files" as scf
    usecase "Use Configuration files" as ucf
    a -> ucf
    Development --> scf
}

package System {
    usecase "Verify the configuration of the system against the repo" as verify
    usecase "Update the configuration to a new version" as update
    usecase "Rollback configuration to previous version" as rollback
    usecase "Report on system compliance with stored config" as report
    a --> verify
    a --> update
    a --> rollback
    a --> report
}

@enduml
```

@startuml Use Cases
left to right direction

package Administration{
    actor "System Admin" as a
}  

@enduml

 